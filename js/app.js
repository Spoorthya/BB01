// Generated by CoffeeScript 1.3.3
(function() {
  var WordBump,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Batman.config.minificationErrors = false;

  WordBump = (function(_super) {

    __extends(WordBump, _super);

    function WordBump() {
      return WordBump.__super__.constructor.apply(this, arguments);
    }

    WordBump.root('app#index');


    return WordBump;

  })(Batman.App);

  WordBump.Word = (function(_super) {

    __extends(Word, _super);

    function Word() {
      return Word.__super__.constructor.apply(this, arguments);
    }

    Word.resourceName = 'word';

    Word.persist(Batman.LocalStorage);

    Word.encode('name', 'rank');

    Word.accessor('addOneHundred', {
      get: function() {
        return this.get('rank') + 100;
      }
    });

    return Word;

  })(Batman.Model);

  WordBump.AppController = (function(_super) {

    __extends(AppController, _super);

    function AppController() {
      return AppController.__super__.constructor.apply(this, arguments);
    }

    AppController.prototype.routingKey = 'app';

    AppController.prototype.index = function() {
      this.set('wordList', this.fillWordList());
      return console.log((this.get('wordList')).length);
    };

    AppController.prototype.fillWordList = function() {
      var tmpWordList, word, words, _i, _len;
      tmpWordList = new Batman.Set;
      words = ['waffle', 'batman', 'ninja', 'rock', 'paper', 'tree', 'fight', 'tall', 'yellow', 'blue'];
      for (_i = 0, _len = words.length; _i < _len; _i++) {
        word = words[_i];
        tmpWordList.add(new WordBump.Word({
          name: word,
          rank: 0
        }));
      }
      return tmpWordList;
    };

    return AppController;

  })(Batman.Controller);

  window.WordBump = WordBump;

  WordBump.run();

}).call(this);
